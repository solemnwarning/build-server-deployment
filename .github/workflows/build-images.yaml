# This file was generated by update-workflows.pl - do not edit it directly!

name: Build Images

on:
  push:

jobs:

  build-agent-debian:
    runs-on: ubuntu-latest
    name: build-agent-debian

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      # Check if we should actually build this AMI.
      - name: Check if AMI up to date
        id: check

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-2

        run: ./.github/workflows/check-ami.sh build-agent-debian

      # Download any plugins/etc
      - name: Build AMI (packer init)
        if: steps.check.outputs.build_ami == 'true'
        uses: hashicorp/packer-github-actions@master

        with:
          command: init
          working_directory: build-agent-debian
          target: build-agent-debian.pkr.hcl

      # Validate Packer definition
      - name: Build AMI (packer validate)
        if: steps.check.outputs.build_ami == 'true'
        uses: hashicorp/packer-github-actions@master

        with:
          command: validate
          arguments: -syntax-only
          working_directory: build-agent-debian
          target: build-agent-debian.pkr.hcl

      # Actually build the AMI
      - name: Build AMI (packer build)
        if: steps.check.outputs.build_ami == 'true'
        uses: hashicorp/packer-github-actions@master

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          BUILDKITE_AGENT_TOKEN: ${{ secrets.BUILDKITE_AGENT_TOKEN }}
          AMI_BRANCH: ${{ steps.check.outputs.branch_name }}
          AMI_COMMIT: ${{ steps.check.outputs.dir_sha }}
          IPXTESTER_AWS_ACCESS_KEY_ID: ${{ secrets.IPXTESTER_AWS_ACCESS_KEY_ID }}
          IPXTESTER_AWS_SECRET_ACCESS_KEY: ${{ secrets.IPXTESTER_AWS_SECRET_ACCESS_KEY }}
          BUILDKITE_USER_SSH_KEY: ${{ secrets.BUILDKITE_USER_SSH_KEY }}
          SCALER_AWS_ACCESS_KEY_ID: ${{ secrets.SCALER_AWS_ACCESS_KEY_ID }}
          SCALER_AWS_SECRET_ACCESS_KEY: ${{ secrets.SCALER_AWS_SECRET_ACCESS_KEY }}
          SCALER_BUILDKITE_API_KEY: ${{ secrets.SCALER_BUILDKITE_API_KEY }}

        with:
          command: build
          working_directory: build-agent-debian
          target: build-agent-debian.pkr.hcl

  build-agent-fedora:
    runs-on: ubuntu-latest
    name: build-agent-fedora

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      # Check if we should actually build this AMI.
      - name: Check if AMI up to date
        id: check

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-2

        run: ./.github/workflows/check-ami.sh build-agent-fedora

      # Download any plugins/etc
      - name: Build AMI (packer init)
        if: steps.check.outputs.build_ami == 'true'
        uses: hashicorp/packer-github-actions@master

        with:
          command: init
          working_directory: build-agent-fedora
          target: build-agent-fedora.pkr.hcl

      # Validate Packer definition
      - name: Build AMI (packer validate)
        if: steps.check.outputs.build_ami == 'true'
        uses: hashicorp/packer-github-actions@master

        with:
          command: validate
          arguments: -syntax-only
          working_directory: build-agent-fedora
          target: build-agent-fedora.pkr.hcl

      # Actually build the AMI
      - name: Build AMI (packer build)
        if: steps.check.outputs.build_ami == 'true'
        uses: hashicorp/packer-github-actions@master

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          BUILDKITE_AGENT_TOKEN: ${{ secrets.BUILDKITE_AGENT_TOKEN }}
          AMI_BRANCH: ${{ steps.check.outputs.branch_name }}
          AMI_COMMIT: ${{ steps.check.outputs.dir_sha }}
          IPXTESTER_AWS_ACCESS_KEY_ID: ${{ secrets.IPXTESTER_AWS_ACCESS_KEY_ID }}
          IPXTESTER_AWS_SECRET_ACCESS_KEY: ${{ secrets.IPXTESTER_AWS_SECRET_ACCESS_KEY }}
          BUILDKITE_USER_SSH_KEY: ${{ secrets.BUILDKITE_USER_SSH_KEY }}
          SCALER_AWS_ACCESS_KEY_ID: ${{ secrets.SCALER_AWS_ACCESS_KEY_ID }}
          SCALER_AWS_SECRET_ACCESS_KEY: ${{ secrets.SCALER_AWS_SECRET_ACCESS_KEY }}
          SCALER_BUILDKITE_API_KEY: ${{ secrets.SCALER_BUILDKITE_API_KEY }}

        with:
          command: build
          working_directory: build-agent-fedora
          target: build-agent-fedora.pkr.hcl

  build-agent-freebsd:
    runs-on: ubuntu-latest
    name: build-agent-freebsd

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      # Check if we should actually build this AMI.
      - name: Check if AMI up to date
        id: check

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-2

        run: ./.github/workflows/check-ami.sh build-agent-freebsd

      # Download any plugins/etc
      - name: Build AMI (packer init)
        if: steps.check.outputs.build_ami == 'true'
        uses: hashicorp/packer-github-actions@master

        with:
          command: init
          working_directory: build-agent-freebsd
          target: build-agent-freebsd.pkr.hcl

      # Validate Packer definition
      - name: Build AMI (packer validate)
        if: steps.check.outputs.build_ami == 'true'
        uses: hashicorp/packer-github-actions@master

        with:
          command: validate
          arguments: -syntax-only
          working_directory: build-agent-freebsd
          target: build-agent-freebsd.pkr.hcl

      # Actually build the AMI
      - name: Build AMI (packer build)
        if: steps.check.outputs.build_ami == 'true'
        uses: hashicorp/packer-github-actions@master

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          BUILDKITE_AGENT_TOKEN: ${{ secrets.BUILDKITE_AGENT_TOKEN }}
          AMI_BRANCH: ${{ steps.check.outputs.branch_name }}
          AMI_COMMIT: ${{ steps.check.outputs.dir_sha }}
          IPXTESTER_AWS_ACCESS_KEY_ID: ${{ secrets.IPXTESTER_AWS_ACCESS_KEY_ID }}
          IPXTESTER_AWS_SECRET_ACCESS_KEY: ${{ secrets.IPXTESTER_AWS_SECRET_ACCESS_KEY }}
          BUILDKITE_USER_SSH_KEY: ${{ secrets.BUILDKITE_USER_SSH_KEY }}
          SCALER_AWS_ACCESS_KEY_ID: ${{ secrets.SCALER_AWS_ACCESS_KEY_ID }}
          SCALER_AWS_SECRET_ACCESS_KEY: ${{ secrets.SCALER_AWS_SECRET_ACCESS_KEY }}
          SCALER_BUILDKITE_API_KEY: ${{ secrets.SCALER_BUILDKITE_API_KEY }}

        with:
          command: build
          working_directory: build-agent-freebsd
          target: build-agent-freebsd.pkr.hcl

  build-agent-ipxtester:
    runs-on: ubuntu-latest
    name: build-agent-ipxtester

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      # Check if we should actually build this AMI.
      - name: Check if AMI up to date
        id: check

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-2

        run: ./.github/workflows/check-ami.sh build-agent-ipxtester

      # Download any plugins/etc
      - name: Build AMI (packer init)
        if: steps.check.outputs.build_ami == 'true'
        uses: hashicorp/packer-github-actions@master

        with:
          command: init
          working_directory: build-agent-ipxtester
          target: build-agent-ipxtester.pkr.hcl

      # Validate Packer definition
      - name: Build AMI (packer validate)
        if: steps.check.outputs.build_ami == 'true'
        uses: hashicorp/packer-github-actions@master

        with:
          command: validate
          arguments: -syntax-only
          working_directory: build-agent-ipxtester
          target: build-agent-ipxtester.pkr.hcl

      # Actually build the AMI
      - name: Build AMI (packer build)
        if: steps.check.outputs.build_ami == 'true'
        uses: hashicorp/packer-github-actions@master

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          BUILDKITE_AGENT_TOKEN: ${{ secrets.BUILDKITE_AGENT_TOKEN }}
          AMI_BRANCH: ${{ steps.check.outputs.branch_name }}
          AMI_COMMIT: ${{ steps.check.outputs.dir_sha }}
          IPXTESTER_AWS_ACCESS_KEY_ID: ${{ secrets.IPXTESTER_AWS_ACCESS_KEY_ID }}
          IPXTESTER_AWS_SECRET_ACCESS_KEY: ${{ secrets.IPXTESTER_AWS_SECRET_ACCESS_KEY }}
          BUILDKITE_USER_SSH_KEY: ${{ secrets.BUILDKITE_USER_SSH_KEY }}
          SCALER_AWS_ACCESS_KEY_ID: ${{ secrets.SCALER_AWS_ACCESS_KEY_ID }}
          SCALER_AWS_SECRET_ACCESS_KEY: ${{ secrets.SCALER_AWS_SECRET_ACCESS_KEY }}
          SCALER_BUILDKITE_API_KEY: ${{ secrets.SCALER_BUILDKITE_API_KEY }}

        with:
          command: build
          working_directory: build-agent-ipxtester
          target: build-agent-ipxtester.pkr.hcl

  build-agent-windows:
    runs-on: ubuntu-latest
    name: build-agent-windows

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      # Check if we should actually build this AMI.
      - name: Check if AMI up to date
        id: check

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-2

        run: ./.github/workflows/check-ami.sh build-agent-windows

      # Download any plugins/etc
      - name: Build AMI (packer init)
        if: steps.check.outputs.build_ami == 'true'
        uses: hashicorp/packer-github-actions@master

        with:
          command: init
          working_directory: build-agent-windows
          target: build-agent-windows.pkr.hcl

      # Validate Packer definition
      - name: Build AMI (packer validate)
        if: steps.check.outputs.build_ami == 'true'
        uses: hashicorp/packer-github-actions@master

        with:
          command: validate
          arguments: -syntax-only
          working_directory: build-agent-windows
          target: build-agent-windows.pkr.hcl

      # Actually build the AMI
      - name: Build AMI (packer build)
        if: steps.check.outputs.build_ami == 'true'
        uses: hashicorp/packer-github-actions@master

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          BUILDKITE_AGENT_TOKEN: ${{ secrets.BUILDKITE_AGENT_TOKEN }}
          AMI_BRANCH: ${{ steps.check.outputs.branch_name }}
          AMI_COMMIT: ${{ steps.check.outputs.dir_sha }}
          IPXTESTER_AWS_ACCESS_KEY_ID: ${{ secrets.IPXTESTER_AWS_ACCESS_KEY_ID }}
          IPXTESTER_AWS_SECRET_ACCESS_KEY: ${{ secrets.IPXTESTER_AWS_SECRET_ACCESS_KEY }}
          BUILDKITE_USER_SSH_KEY: ${{ secrets.BUILDKITE_USER_SSH_KEY }}
          SCALER_AWS_ACCESS_KEY_ID: ${{ secrets.SCALER_AWS_ACCESS_KEY_ID }}
          SCALER_AWS_SECRET_ACCESS_KEY: ${{ secrets.SCALER_AWS_SECRET_ACCESS_KEY }}
          SCALER_BUILDKITE_API_KEY: ${{ secrets.SCALER_BUILDKITE_API_KEY }}

        with:
          command: build
          working_directory: build-agent-windows
          target: build-agent-windows.pkr.hcl

  build-cluster-manager:
    runs-on: ubuntu-latest
    name: build-cluster-manager

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      # Check if we should actually build this AMI.
      - name: Check if AMI up to date
        id: check

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-2

        run: ./.github/workflows/check-ami.sh build-cluster-manager

      # Download any plugins/etc
      - name: Build AMI (packer init)
        if: steps.check.outputs.build_ami == 'true'
        uses: hashicorp/packer-github-actions@master

        with:
          command: init
          working_directory: build-cluster-manager
          target: build-cluster-manager.pkr.hcl

      # Validate Packer definition
      - name: Build AMI (packer validate)
        if: steps.check.outputs.build_ami == 'true'
        uses: hashicorp/packer-github-actions@master

        with:
          command: validate
          arguments: -syntax-only
          working_directory: build-cluster-manager
          target: build-cluster-manager.pkr.hcl

      # Actually build the AMI
      - name: Build AMI (packer build)
        if: steps.check.outputs.build_ami == 'true'
        uses: hashicorp/packer-github-actions@master

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          BUILDKITE_AGENT_TOKEN: ${{ secrets.BUILDKITE_AGENT_TOKEN }}
          AMI_BRANCH: ${{ steps.check.outputs.branch_name }}
          AMI_COMMIT: ${{ steps.check.outputs.dir_sha }}
          IPXTESTER_AWS_ACCESS_KEY_ID: ${{ secrets.IPXTESTER_AWS_ACCESS_KEY_ID }}
          IPXTESTER_AWS_SECRET_ACCESS_KEY: ${{ secrets.IPXTESTER_AWS_SECRET_ACCESS_KEY }}
          BUILDKITE_USER_SSH_KEY: ${{ secrets.BUILDKITE_USER_SSH_KEY }}
          SCALER_AWS_ACCESS_KEY_ID: ${{ secrets.SCALER_AWS_ACCESS_KEY_ID }}
          SCALER_AWS_SECRET_ACCESS_KEY: ${{ secrets.SCALER_AWS_SECRET_ACCESS_KEY }}
          SCALER_BUILDKITE_API_KEY: ${{ secrets.SCALER_BUILDKITE_API_KEY }}

        with:
          command: build
          working_directory: build-cluster-manager
          target: build-cluster-manager.pkr.hcl


  deploy:
    runs-on: ubuntu-latest
    name: "Deploy cluster"
    needs: [ build-agent-debian, build-agent-fedora, build-agent-freebsd, build-agent-ipxtester, build-agent-windows, build-cluster-manager ]

    steps:
    - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

    - uses: hashicorp/setup-terraform@v1

      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - run: terraform init
      working-directory: build-cluster-aws

    - run: terraform apply -auto-approve
      working-directory: build-cluster-aws
